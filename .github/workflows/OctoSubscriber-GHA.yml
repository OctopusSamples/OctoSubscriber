# This is a basic workflow to help you get started with Actions

name: Azure Function - GHA

on:
  # push:
  #   paths:
  #     - 'azure/**'

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

jobs:
  build:
    #runs-on: ubuntu-latest
    runs-on: windows-latest
    strategy:
      matrix:
        dotnet-version: ['8.0.x']

    steps:
      - uses: actions/checkout@v2
      - name: Setup .NET Core SDK ${{ matrix.dotnet-version }}
        uses: actions/setup-dotnet@v1.7.2
        with:
          dotnet-version: ${{ matrix.dotnet-version }}

      - uses: actions/checkout@v2
      - name: Set Version
        run: echo "PACKAGE_VERSION=$(date +'%Y.%-m.%-d').$GITHUB_RUN_NUMBER" >> $GITHUB_ENV

      - name: Create artifacts folder
        run: |
          mkdir "${{ github.workspace }}/artifacts"
          mkdir "${{ github.workspace }}/artifacts/process-message"
          mkdir "${{ github.workspace }}/azure/accept_message/node_modules"


      - name: Restore dependencies for process-message
        working-directory: azure/process_message/process_message
        run: dotnet restore

      - name: Build process-message
        working-directory: azure/process_message/process_message
        run: |
          dotnet build --configuration Release --no-restore --output "${{ github.workspace }}/artifacts/process-message"

      - name: Create nuspec file
        shell: pwsh
        run: |
          $nuspec = @"
          <?xml version="1.0"?>
          <package >
            <metadata>
              <id>OctopusSamples.process-message</id>
              <version>$($env:PACKAGE_VERSION)</version>
              <authors>OctopusSamples</authors>
              <owners>OctopusSamples</owners>
              <description>Octopus Samples process-message</description>
              <tags>octopus samples</tags>
              <repository type="git" url="https://github.com/twerthi/OctoSubscriber" />
            </metadata>
          </package>
          "@
          $nuspec | Out-File -FilePath "${{ github.workspace }}/artifacts/process-message/OctopusSamples.process-message.$($env:PACKAGE_VERSION).nuspec" -Encoding utf8

      - name: Create nuget package
        uses: nuget/setup-nuget@v2
      - run: nuget pack "${{ github.workspace }}/artifacts/process-message/OctopusSamples.process-message.${{ env.PACKAGE_VERSION }}.nuspec" -OutputDirectory "${{ github.workspace }}/artifacts"

      # - uses: vimtor/action-zip@v1.2
      #   name: Zip process-message
      #   with:
      #     files: ${{ github.workspace }}/artifacts/process-message
      #     recursive: true
      #     dest: ${{ github.workspace }}/artifacts/process-message.${{ env.PACKAGE_VERSION }}.zip

      # - uses: softprops/action-gh-release@v2
      #   env:
      #     GITHUB_TOKEN: ${{ secrets.GHA_TOKEN }}
      #   with:
      #     tag_name: ${{ env.PACKAGE_VERSION }}
      #     draft: false
      #     prerelease: false
      #     files: ${{ github.workspace }}/artifacts/process-message.${{ env.PACKAGE_VERSION }}.zip

      # - name: Upload Release Asset
      #   id: upload-release-asset 
      #   uses: actions/upload-release-asset@v1
      #   env:
      #     GITHUB_TOKEN: ${{ secrets.GHA_TOKEN }}
      #   with:
      #     upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps 
      #     asset_path: ${{ github.workspace }}/artifacts/process-message.${{ env.PACKAGE_VERSION }}.zip
      #     asset_name: process-message.${{ env.PACKAGE_VERSION }}.zip
      #     asset_content_type: application/zip          

      # - name: Package process-message
      #   run: |
      #     dotnet pack azure/process_message/process_message/process_message.csproj --configuration Release --output "${{ github.workspace }}/artifacts" -p:PackageVersion=${{ env.PACKAGE_VERSION }}
      #     ls "${{ github.workspace }}/artifacts"


      # - name: Add source
      #   run: |
      #     dotnet nuget add source "https://nuget.pkg.github.com/twerthi/index.json" --username OctopusSamples --password ${{ secrets.GHA_TOKEN }} --store-password-in-clear-text --name github 
      # - name: Push packages to GitHub Packages NuGet feed
      #   run: |
      #     dotnet nuget push "${{ github.workspace }}/artifacts/OctopusSamples.process-message.$PACKAGE_VERSION.nupkg"  --api-key ${{ secrets.GHA_TOKEN }} --source "github"